from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram import Bot, Router
from aiogram.filters.command import CommandStart, CommandObject, Command
from megamarket.queries import parse_products
from utils.urls import is_catalog_url
from utils.send import send_products
from db.models.user import User
from sqlalchemy.ext.asyncio import AsyncSession
from playwright.async_api import Error

from .kb import subscribe_menu, Subscribe

import asyncio

async def start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç!\n üëã –≠—Ç–æ—Ç –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–µ—à–±–µ–∫–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω–µ <b>megamarket.ru</b>.")

async def parse_megamarket(message: Message, command: CommandObject, bot: Bot, session: AsyncSession, user: User, browser):
    args = command.args
    
    if not args:
        return await message.answer("‚ùå –£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –∏ –∫–µ—à–±–µ–∫")
    
    url, cashback = args.split(" ")
    cashback = int(cashback)
    
    if cashback <= 20:
        return await message.answer("‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–µ—à–±–µ–∫ 20%")

    if cashback >= 90:
        return await message.answer("‚ùå –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫–µ—à–±–µ–∫ 90%")
    
    if not is_catalog_url(url=url):
        return await message.answer("‚ùå –°—Å—ã–ª–∫–∞ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!")

    user.is_parsing = True
    await user.save(session)
    
    try:
        await send_products(bot, session, message.chat.id, url, cashback, browser)
    except TimeoutError:
        await message.answer("TimeoutError")


async def subscribe_buy(message: Message):
    await message.answer("<b>–¢–∞—Ä–∏—Ñ—ã</b>\n\n<i>–≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.</i>", reply_markup=subscribe_menu())

async def parse_stop(message: Message, user: User, session: AsyncSession):
    if user.is_parsing:
        user.is_parsing = False
        await user.save(session)
        
        return await message.answer("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –ø–∞—Ä—Å–µ—Ä")
    await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç—É –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞—Ä—Å–µ—Ä–æ–≤.")

def register_user_handlers(router: Router):
    router.message.register(start, CommandStart())
    router.message.register(parse_megamarket, Command("parse"))
    router.message.register(subscribe_buy, Command("buy"))
    router.message.register(parse_stop, Command("stop"))